{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es.array.reduce.js","webpack:///./node_modules/core-js/internals/array-method-has-species-support.js","webpack:///./node_modules/howler/dist/howler.js","webpack:///./src/components/Game.vue?26ef","webpack:///./node_modules/core-js/modules/es.array.filter.js","webpack:///./node_modules/core-js/internals/array-species-create.js","webpack:///./node_modules/core-js/internals/array-method-is-strict.js","webpack:///./node_modules/core-js/internals/array-method-uses-to-length.js","webpack:///./src/views/Sandbox.vue?6c08","webpack:///./src/components/Game.vue?13f7","webpack:///src/components/Game.vue","webpack:///./src/components/Game.vue?92d9","webpack:///./src/components/Game.vue","webpack:///src/views/Sandbox.vue","webpack:///./src/views/Sandbox.vue?8e6c","webpack:///./src/views/Sandbox.vue","webpack:///./node_modules/core-js/internals/array-iteration.js","webpack:///./node_modules/core-js/internals/array-reduce.js","webpack:///./node_modules/core-js/internals/is-array.js"],"names":["$","$reduce","left","arrayMethodIsStrict","arrayMethodUsesToLength","STRICT_METHOD","USES_TO_LENGTH","1","target","proto","forced","reduce","callbackfn","this","arguments","length","undefined","fails","wellKnownSymbol","V8_VERSION","SPECIES","module","exports","METHOD_NAME","array","constructor","foo","Boolean","HowlerGlobal","init","prototype","self","Howler","_counter","_html5AudioPool","html5PoolSize","_codecs","_howls","_muted","_volume","_canPlayEvent","_navigator","window","navigator","masterGain","noAudio","usingWebAudio","autoSuspend","ctx","autoUnlock","_setup","volume","vol","parseFloat","setupAudioContext","gain","setValueAtTime","currentTime","i","_webAudio","ids","_getSoundIds","j","sound","_soundById","_node","mute","muted","unload","close","codecs","ext","replace","state","_autoSuspend","Audio","test","oncanplaythrough","e","_setupCodecs","audioTest","err","canPlayType","mpegTest","checkOpera","userAgent","match","isOldOpera","parseInt","split","mp3","mpeg","opus","ogg","oga","wav","aac","caf","m4a","mp4","weba","webm","dolby","flac","_unlockAudio","_audioUnlocked","_mobileUnloaded","sampleRate","_scratchBuffer","createBuffer","unlock","audioNode","_unlocked","_releaseHtml5Audio","load","_autoResume","source","createBufferSource","buffer","connect","destination","start","noteOn","resume","onended","disconnect","document","removeEventListener","_emit","addEventListener","_obtainHtml5Audio","pop","testPlay","play","Promise","then","catch","console","warn","audio","push","suspend","_sounds","_paused","_suspendTimer","clearTimeout","setTimeout","_resumeAfterSuspend","Howl","o","src","error","_autoplay","autoplay","_format","format","_html5","html5","_loop","loop","_pool","pool","_preload","preload","_rate","rate","_sprite","sprite","_src","_xhrWithCredentials","xhrWithCredentials","_duration","_state","_endTimers","_queue","_playLock","_onend","onend","fn","_onfade","onfade","_onload","onload","_onloaderror","onloaderror","_onplayerror","onplayerror","_onpause","onpause","_onplay","onplay","_onstop","onstop","_onmute","onmute","_onvolume","onvolume","_onrate","onrate","_onseek","onseek","_onunlock","onunlock","_onresume","event","action","url","str","exec","toLowerCase","location","protocol","slice","Sound","loadBuffer","internal","id","num","_ended","_id","_inactiveSound","soundId","_loadQueue","seek","Math","max","_seek","duration","timeout","abs","stop","setParams","_start","_stop","node","playWebAudio","_refreshBuffer","_playStart","bufferSource","noteGrainOn","Infinity","bind","once","_clearTimer","playHtml5","playbackRate","paused","loadedNoReadyState","ejecta","readyState","isCocoonJS","listener","pause","_rateSeek","_stopFade","noteOff","_cleanBuffer","isNaN","_clearSound","_interval","args","index","indexOf","apply","fade","from","to","len","end","linearRampToValueAtTime","_startFadeInterval","isGroup","diff","steps","stepLen","lastTick","Date","now","_fadeTo","setInterval","tick","min","round","clearInterval","cancelScheduledValues","loopStart","loopEnd","playing","realTime","rateSeek","seekAndEmit","emitSeek","sounds","_errorFn","_loadFn","splice","remCache","cache","on","events","off","isId","keys","Object","Array","isArray","msg","call","task","shift","ended","_drain","reset","limit","cnt","_panner","isIOS","vendor","checkIE","howl","_parent","parent","create","createGain","createGainNode","_errorListener","_loadListener","code","ceil","__default","loadSound","data","atob","dataView","Uint8Array","charCodeAt","decodeAudioData","xhr","XMLHttpRequest","open","withCredentials","responseType","status","response","onerror","safeXhrSend","send","arraybuffer","success","AudioContext","webkitAudioContext","iOS","platform","appVersion","version","safari","standalone","global","_pos","_orientation","stereo","pan","pos","x","y","z","positionX","setTargetAtTime","positionY","positionZ","setPosition","orientation","xUp","yUp","zUp","or","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","_super","_stereo","_pannerAttr","coneInnerAngle","coneOuterAngle","coneOuterGain","distanceModel","maxDistance","panningModel","refDistance","rolloffFactor","_onstereo","onstereo","_onpos","onpos","_onorientation","onorientation","pannerType","createStereoPanner","setupPanner","orientationX","orientationY","orientationZ","pannerAttr","_coneInnerAngle","_coneOuterAngle","_coneOuterGain","_distanceModel","_maxDistance","_refDistance","_rolloffFactor","_panningModel","pa","panner","type","createPanner","$filter","filter","arrayMethodHasSpeciesSupport","HAS_SPECIES_SUPPORT","isObject","originalArray","C","argument","method","DESCRIPTORS","has","defineProperty","thrower","it","options","ACCESSORS","argument0","argument1","O","enumerable","get","render","_vm","_h","$createElement","_c","_self","staticClass","staticRenderFns","done","_e","style","changeColor","attrs","$event","updateCount","_l","item","key","capt","class","trophy","_v","_s","numClicks","secs","restart","name","active","colors","color","width","height","points","computed","result","log","filt","mounted","methods","warna","transitionDelay","transitionTimingFunction","reload","component","components","Game","backsound","IndexedObject","toObject","toLength","arraySpeciesCreate","createMethod","TYPE","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","NO_HOLES","$this","that","specificCreate","value","boundFunction","forEach","map","some","every","find","findIndex","aFunction","IS_RIGHT","argumentsLength","memo","TypeError","right","classof","arg"],"mappings":"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","file":"js/chunk-435e4632.7ac00249.js","sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar $reduce = require('../internals/array-reduce').left;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar STRICT_METHOD = arrayMethodIsStrict('reduce');\nvar USES_TO_LENGTH = arrayMethodUsesToLength('reduce', { 1: 0 });\n\n// `Array.prototype.reduce` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.reduce\n$({ target: 'Array', proto: true, forced: !STRICT_METHOD || !USES_TO_LENGTH }, {\n  reduce: function reduce(callbackfn /* , initialValue */) {\n    return $reduce(this, callbackfn, arguments.length, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","var fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar SPECIES = wellKnownSymbol('species');\n\nmodule.exports = function (METHOD_NAME) {\n  // We can't use this feature detection in V8 since it causes\n  // deoptimization and serious performance degradation\n  // https://github.com/zloirock/core-js/issues/677\n  return V8_VERSION >= 51 || !fails(function () {\n    var array = [];\n    var constructor = array.constructor = {};\n    constructor[SPECIES] = function () {\n      return { foo: 1 };\n    };\n    return array[METHOD_NAME](Boolean).foo !== 1;\n  });\n};\n","/*!\n *  howler.js v2.1.3\n *  howlerjs.com\n *\n *  (c) 2013-2019, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Pool of unlocked HTML5 Audio objects.\n      self._html5AudioPool = [];\n      self.html5PoolSize = 10;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto audio unlocker.\n      self.autoUnlock = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var checkOpera = self._navigator && self._navigator.userAgent.match(/OPR\\/([0-6].)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!audioTest.canPlayType('audio/wav; codecs=\"1\"').replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        webm: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Some browsers/devices will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _unlockAudio: function() {\n      var self = this || Howler;\n\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\n      if (self._audioUnlocked || !self.ctx) {\n        return;\n      }\n\n      self._audioUnlocked = false;\n      self.autoUnlock = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function(e) {\n        // Create a pool of unlocked HTML5 Audio objects that can\n        // be used for playing sounds without user interaction. HTML5\n        // Audio objects must be individually unlocked, as opposed\n        // to the WebAudio API which only needs a single activation.\n        // This must occur before WebAudio setup or the source.onended\n        // event will not fire.\n        for (var i=0; i<self.html5PoolSize; i++) {\n          try {\n            var audioNode = new Audio();\n\n            // Mark this Audio object as unlocked to ensure it can get returned\n            // to the unlocked pool when released.\n            audioNode._unlocked = true;\n\n            // Add the audio node to the pool.\n            self._releaseHtml5Audio(audioNode);\n          } catch (e) {\n            self.noAudio = true;\n          }\n        }\n\n        // Loop through any assigned audio nodes and unlock them.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and unlock the audio nodes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node && !sound._node._unlocked) {\n                sound._node._unlocked = true;\n                sound._node.load();\n              }\n            }\n          }\n        }\n\n        // Fix Android can not play in suspend state.\n        self._autoResume();\n\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._audioUnlocked = true;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true);\n\n          // Let all sounds know that audio has been unlocked.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\n     * return a new Audio object and throw a warning.\n     * @return {Audio} HTML5 Audio object.\n     */\n    _obtainHtml5Audio: function() {\n      var self = this || Howler;\n\n      // Return the next object from the pool if one exists.\n      if (self._html5AudioPool.length) {\n        return self._html5AudioPool.pop();\n      }\n\n      //.Check if the audio is locked and throw a warning.\n      var testPlay = new Audio().play();\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\n        testPlay.catch(function() {\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\n        });\n      }\n\n      return new Audio();\n    },\n\n    /**\n     * Return an activated HTML5 Audio object to the pool.\n     * @return {Howler}\n     */\n    _releaseHtml5Audio: function(audio) {\n      var self = this || Howler;\n\n      // Don't add audio to the pool if we don't know if it has been unlocked.\n      if (audio._unlocked) {\n        self._html5AudioPool.push(audio);\n      }\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n        self.ctx.suspend().then(function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        });\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhrWithCredentials = o.xhrWithCredentials || false;\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false;\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\n        Howler._unlockAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload) {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended. \n        // If there is, play that sound. If not, continue as usual.  \n        if (!self._playLock) {\n          var num = 0;\n          for (var i=0; i<self._sounds.length; i++) {\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n              num++;\n              id = self._sounds[i]._id;\n            }\n          }\n\n          if (num === 1) {\n            sprite = null;\n          } else {\n            id = null;\n          }\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Mark this sound as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n      var start = self._sprite[sprite][0] / 1000;\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._sprite = sprite;\n\n      // Mark the sound as ended instantly so that this async playback\n      // doesn't get grabbed by another call to play while this one waits to start.\n      sound._ended = false;\n\n      // Update the parameters of the sound.\n      var setParams = function() {\n        sound._paused = false;\n        sound._seek = seek;\n        sound._start = start;\n        sound._stop = stop;\n        sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n      };\n\n      // End the sound instantly if seek is at the end.\n      if (seek >= stop) {\n        self._ended(sound);\n        return;\n      }\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._playLock = false;\n          setParams();\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running') {\n          playWebAudio();\n        } else {\n          self._playLock = true;\n\n          // Wait for the audio context to resume before playing.\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Some browsers will throw an error if this is called without user interaction.\n          try {\n            var play = node.play();\n\n            // Support older browsers that don't support promises, and thus don't have this issue.\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true;\n\n              // Set param values immediately.\n              setParams();\n\n              // Releases the lock and executes queued actions.\n              play\n                .then(function() {\n                  self._playLock = false;\n                  node._unlocked = true;\n                  if (!internal) {\n                    self._emit('play', sound._id);\n                    self._loadQueue();\n                  }\n                })\n                .catch(function() {\n                  self._playLock = false;\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\n\n                  // Reset the ended and paused values.\n                  sound._ended = true;\n                  sound._paused = true;\n                });\n            } else if (!internal) {\n              self._playLock = false;\n              setParams();\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }\n\n            // Setting rate before playing won't work in IE, so we set it again here.\n            node.playbackRate = sound._rate;\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices and Chrome where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the end timer on sprites or listen for the ended event.\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function() {\n                // Fire ended on this audio node.\n                self._ended(sound);\n\n                // Clear this listener.\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // If this is streaming audio, make sure the src is set and load again.\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\n          node.src = self._src;\n          node.load();\n        }\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          self._playLock = true;\n\n          var listener = function() {\n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n\n              // If this is a live stream, stop download once the audio is stopped.\n              if (sound._node.duration === Infinity) {\n                self._clearSound(sound._node);\n              }\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded'|| self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          // Cancel active fade and set the volume to the end value.\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded'|| self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Make sure the to/from/len values are numbers.\n      from = parseFloat(from);\n      to = parseFloat(to);\n      len = parseFloat(len);\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\n      var lastTick = Date.now();\n\n      // Store the value being faded to.\n      sound._fadeTo = to;\n\n      // Update the volume value on each interval tick.\n      sound._interval = setInterval(function() {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick;\n\n        // Make sure the volume is in the right bounds.\n        vol = Math.max(0, vol);\n        vol = Math.min(1, vol);\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Change the volume.\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // Set the group's volume.\n        if (isGroup) {\n          self._volume = vol;\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            if (self.playing(id[i])) {\n              sound._rateSeek = self.seek(id[i]);\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            }\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return self;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\n            sound._node.currentTime = seek;\n          }\n\n          // Seek and emit when ready.\n          var seekAndEmit = function() {\n            self._emit('seek', id);\n\n            // Restart the playback if the sound was playing.\n            if (playing) {\n              self.play(id, true);\n            }\n          };\n\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\n          if (playing && !self._webAudio) {\n            var emitSeek = function() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          self._clearSound(sounds[i]._node);\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n\n          // Release the Audio object back to the pool.\n          Howler._releaseHtml5Audio(sounds[i]._node);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n      }\n\n      // Remove the references in the global Howler object.\n      var index = Howler._howls.indexOf(self);\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      // Pass the event type into load queue so that it can continue stepping.\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // Remove this task if a matching event was passed.\n        if (task.event === event) {\n          self._queue.shift();\n          self._loadQueue();\n        }\n\n        // Run the task if no event type is passed.\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        if (isIOS) {\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\n        }\n      }\n      node.bufferSource = null;\n\n      return self;\n    },\n\n    /**\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\n     * @param  {Object} node Audio node to clear.\n     */\n    _clearSound: function(node) {\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n      if (!checkIE) {\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n      }\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else if (!Howler.noAudio) {\n        // Get an unlocked Audio object from the pool.\n        self._node = Howler._obtainHtml5Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = 'auto';\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', url, true);\n      xhr.withCredentials = self._xhrWithCredentials;\n      xhr.responseType = 'arraybuffer';\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    };\n\n    // Load the sound on success.\n    var success = function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    };\n\n    // Decode the buffer into an audio source.\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  }\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\n    if (!Howler.usingWebAudio) {\n      return;\n    }\n\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // If the audio context creation still failed, set using web audio to false.\n    if (!Howler.ctx) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && Howler._navigator.standalone && !safari || Howler._navigator && !Howler._navigator.standalone && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : Howler._volume, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Define globally in case AMD is not available or unused.\n  if (typeof window !== 'undefined') {\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  } else if (typeof global !== 'undefined') { // Add to global in Node.js (for testing, etc).\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.1.3\n *  howlerjs.com\n *\n *  (c) 2013-2019, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n      }\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upX.setTargetAtTime(xUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upY.setTargetAtTime(yUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upZ.setTargetAtTime(zUp, Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n      }\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              if (typeof sound._panner.positionX !== 'undefined') {\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\n              } else {\n                sound._panner.setPosition(pan, 0, 0);\n              }\n            } else {\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\n   * @param  {Number} x  The x-position of the audio source.\n   * @param  {Number} y  The y-position of the audio source.\n   * @param  {Number} z  The z-position of the audio source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.positionX !== 'undefined') {\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setPosition(x, y, z);\n            }\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.orientationX !== 'undefined') {\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setOrientation(x, y, z);\n            }\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      inside of which there will be no volume reduction.\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\n   *                     listener. Can be `linear`, `inverse` or `exponential.\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\n   *                   will not be reduced any further.\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`\n   *                     with `inverse` and `exponential`.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *\n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          if (!o.pannerAttr) {\n            o.pannerAttr = {\n              coneInnerAngle: o.coneInnerAngle,\n              coneOuterAngle: o.coneOuterAngle,\n              coneOuterGain: o.coneOuterGain,\n              distanceModel: o.distanceModel,\n              maxDistance: o.maxDistance,\n              refDistance: o.refDistance,\n              rolloffFactor: o.rolloffFactor,\n              panningModel: o.panningModel\n            };\n          }\n\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\n        };\n\n        // Update the panner values or create a new panner if none exists.\n        var panner = sound._panner;\n        if (panner) {\n          panner.coneInnerAngle = pa.coneInnerAngle;\n          panner.coneOuterAngle = pa.coneOuterAngle;\n          panner.coneOuterGain = pa.coneOuterGain;\n          panner.distanceModel = pa.distanceModel;\n          panner.maxDistance = pa.maxDistance;\n          panner.refDistance = pa.refDistance;\n          panner.rolloffFactor = pa.rolloffFactor;\n          panner.panningModel = pa.panningModel;\n        } else {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      } else if (self._panner) {\n        // Disconnect the panner.\n        self._panner.disconnect(0);\n        self._panner = undefined;\n        parent._refreshBuffer(self);\n      }\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n\n      if (typeof sound._panner.positionX !== 'undefined') {\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      }\n\n      if (typeof sound._panner.orientationX !== 'undefined') {\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n      }\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id, true);\n    }\n  };\n})();\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Game.vue?vue&type=style&index=0&id=2cdc9ebf&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Game.vue?vue&type=style&index=0&id=2cdc9ebf&scoped=true&lang=css&\"","'use strict';\nvar $ = require('../internals/export');\nvar $filter = require('../internals/array-iteration').filter;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('filter');\n// Edge 14- issue\nvar USES_TO_LENGTH = arrayMethodUsesToLength('filter');\n\n// `Array.prototype.filter` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.filter\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {\n  filter: function filter(callbackfn /* , thisArg */) {\n    return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","var isObject = require('../internals/is-object');\nvar isArray = require('../internals/is-array');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\n\n// `ArraySpeciesCreate` abstract operation\n// https://tc39.github.io/ecma262/#sec-arrayspeciescreate\nmodule.exports = function (originalArray, length) {\n  var C;\n  if (isArray(originalArray)) {\n    C = originalArray.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    else if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return new (C === undefined ? Array : C)(length === 0 ? 0 : length);\n};\n","'use strict';\nvar fails = require('../internals/fails');\n\nmodule.exports = function (METHOD_NAME, argument) {\n  var method = [][METHOD_NAME];\n  return !!method && fails(function () {\n    // eslint-disable-next-line no-useless-call,no-throw-literal\n    method.call(null, argument || function () { throw 1; }, 1);\n  });\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar has = require('../internals/has');\n\nvar defineProperty = Object.defineProperty;\nvar cache = {};\n\nvar thrower = function (it) { throw it; };\n\nmodule.exports = function (METHOD_NAME, options) {\n  if (has(cache, METHOD_NAME)) return cache[METHOD_NAME];\n  if (!options) options = {};\n  var method = [][METHOD_NAME];\n  var ACCESSORS = has(options, 'ACCESSORS') ? options.ACCESSORS : false;\n  var argument0 = has(options, 0) ? options[0] : thrower;\n  var argument1 = has(options, 1) ? options[1] : undefined;\n\n  return cache[METHOD_NAME] = !!method && !fails(function () {\n    if (ACCESSORS && !DESCRIPTORS) return true;\n    var O = { length: -1 };\n\n    if (ACCESSORS) defineProperty(O, 1, { enumerable: true, get: thrower });\n    else O[1] = 1;\n\n    method.call(O, argument0, argument1);\n  });\n};\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"sandbox\"},[_c('Game')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"container\"},[(!_vm.done)?_c('div',{staticClass:\"col\"},[_c('button',{style:(_vm.changeColor()),attrs:{\"type\":\"submit\",\"id\":\"tombol\"},on:{\"click\":function($event){return _vm.updateCount()}}})]):_vm._e(),(_vm.done)?_c('div',{staticClass:\"col\"},[_vm._l((_vm.result),function(item){return _c('div',{key:item.capt,staticClass:\"sumting\"},[_c('i',{staticClass:\"nes-icon\",class:item.trophy}),_c('p',[_vm._v(_vm._s(item.capt))])])}),_c('h1',[_vm._v(\"Gum Uvvur\")])],2):_vm._e(),_c('div',{staticClass:\"col\"},[_c('h3',[_vm._v(\" You clicked \"),_c('b',[_vm._v(_vm._s(_vm.numClicks))]),_vm._v(\" times \")]),_c('h4',[_vm._v(\" You have \"),_c('b',[_vm._v(_vm._s(_vm.secs))]),_vm._v(\" secs left \")])]),(_vm.done)?_c('div',{staticClass:\"col\"},[_c('button',{staticClass:\"nes-btn is-warning\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.restart()}}},[_vm._v(\" restart \")])]):_vm._e()])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"container\">\n    <!-- Game Starter -->\n    <div v-if=\"!done\" class=\"col\">\n      <button\n        type=\"submit\"\n        id=\"tombol\"\n        @click=\"updateCount()\"\n        :style=\"changeColor()\"\n      ></button>\n    </div>\n\n    <!-- Game over -->\n    <div v-if=\"done\" class=\"col\">\n      <div v-for=\"item in result\" :key=\"item.capt\" class=\"sumting\">\n        <i class=\"nes-icon\" :class=\"item.trophy\"></i>\n        <p>{{ item.capt }}</p>\n      </div>\n      <h1>Gum Uvvur</h1>\n    </div>\n\n    <!-- status  -->\n    <div class=\"col\">\n      <h3>\n        You clicked <b>{{ numClicks }}</b> times\n      </h3>\n      <h4>\n        You have <b>{{ secs }}</b> secs left\n      </h4>\n    </div>\n\n    <div v-if=\"done\" class=\"col\">\n      <button type=\"button\" class=\"nes-btn is-warning\" @click=\"restart()\">\n        restart\n      </button>\n    </div>\n  </div>\n</template>\n<script>\nexport default {\n  name: 'Game',\n  data() {\n    return {\n      active: false,\n      done: false,\n      numClicks: 0,\n      secs: 10,\n      colors: ['#9bcd77', '#d777b0', '#fed401', '#ff2c3c', '#66c652'],\n      color: '',\n      width: 200,\n      height: 200,\n      points: [\n        {\n          rule: '0',\n          trophy: 'coin is-medium',\n          capt: 'LOL :v'\n        },\n        {\n          rule: '20',\n          trophy: 'coin is-medium',\n          capt: 'Yeay, u got a useless coin :('\n        },\n        {\n          rule: '50',\n          trophy: 'nes-bulbasaur is-small',\n          capt: 'Yeay, u got bulbasaur!! what if..'\n        },\n        {\n          rule: '60',\n          trophy: 'nes-charmander is-small',\n          capt: 'Maaannn, u got a charming charmander!! hmm..'\n        },\n        {\n          rule: '70',\n          trophy: 'nes-squirtle is-small',\n          capt: 'Ssss squirtle??? Marvelouss!!!'\n        },\n        {\n          rule: '80',\n          trophy: 'nes-kirby is-small',\n          capt: 'KIRRBYYYY!!! OMFAntt!!!'\n        },\n        {\n          rule: '100',\n          trophy: 'nes-octocat is-small animate',\n          capt: 'no doubt, you are a GOD TAPPER!'\n        }\n      ]\n    }\n  },\n\n  computed: {\n    result: function() {\n      const filt = [\n        this.points\n          .filter(item => {\n            return item.rule < this.numClicks\n          })\n          .reduce((a, b) => {\n            return b.rule > a.rule ? b : a\n          })\n      ]\n      console.log(filt)\n\n      return filt\n    }\n  },\n\n  mounted() {\n    setInterval(() => {\n      if (this.active) {\n        this.secs--\n        if (this.secs == 0) {\n          this.active = false\n          this.done = true\n        }\n      }\n    }, 1000)\n  },\n\n  methods: {\n    updateCount() {\n      const warna = this.colors[\n        Math.round(Math.random() * (this.colors.length - 1))\n      ]\n      this.numClicks += 1\n      this.color = warna\n\n      if (this.active == false) {\n        this.secs = 10\n        this.numClicks = 1\n        this.active = true\n      }\n\n      if (this.numClicks % 10 == 0) {\n        this.width -= 10\n        this.height -= 10\n      }\n    },\n    changeColor() {\n      return {\n        'background-color': this.color,\n        width: this.width + 'px',\n        height: this.width + 'px',\n        transitionDelay: 500,\n        transitionTimingFunction: 'ease-out'\n      }\n    },\n    restart() {\n      window.location.reload()\n    }\n  }\n}\n</script>\n<style scoped>\n#tombol {\n  border: none;\n  color: #fff;\n  transition: 0.3s;\n  border-radius: 50%;\n  background-color: #f2ca27;\n}\n#tombol:active {\n  width: 190px;\n  height: 190px;\n}\n#tombol:focus {\n  outline: none;\n}\n.sumting {\n  margin-bottom: 40px;\n  font-size: 8pt;\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Game.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Game.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Game.vue?vue&type=template&id=2cdc9ebf&scoped=true&\"\nimport script from \"./Game.vue?vue&type=script&lang=js&\"\nexport * from \"./Game.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Game.vue?vue&type=style&index=0&id=2cdc9ebf&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"2cdc9ebf\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div class=\"sandbox\">\n    <Game />\n  </div>\n</template>\n\n<script>\nimport { Howl } from 'howler'\n\n// @ is an alias to /src\nimport Game from '@/components/Game.vue'\n\nexport default {\n  name: 'Sandbox',\n  components: {\n    Game\n  },\n  mounted: () => {\n    const backsound = new Howl({\n      src: ['bgMusic.wav'],\n      autoplay: true,\n      loop: true,\n      volume: 0.9,\n      onended: () => console.log('Ended')\n    })\n    backsound.play()\n  }\n}\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Sandbox.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Sandbox.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Sandbox.vue?vue&type=template&id=0d9ddcba&\"\nimport script from \"./Sandbox.vue?vue&type=script&lang=js&\"\nexport * from \"./Sandbox.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var bind = require('../internals/function-bind-context');\nvar IndexedObject = require('../internals/indexed-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar arraySpeciesCreate = require('../internals/array-species-create');\n\nvar push = [].push;\n\n// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex }` methods implementation\nvar createMethod = function (TYPE) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  return function ($this, callbackfn, that, specificCreate) {\n    var O = toObject($this);\n    var self = IndexedObject(O);\n    var boundFunction = bind(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var create = specificCreate || arraySpeciesCreate;\n    var target = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var value, result;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      value = self[index];\n      result = boundFunction(value, index, O);\n      if (TYPE) {\n        if (IS_MAP) target[index] = result; // map\n        else if (result) switch (TYPE) {\n          case 3: return true;              // some\n          case 5: return value;             // find\n          case 6: return index;             // findIndex\n          case 2: push.call(target, value); // filter\n        } else if (IS_EVERY) return false;  // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.forEach` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.foreach\n  forEach: createMethod(0),\n  // `Array.prototype.map` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.map\n  map: createMethod(1),\n  // `Array.prototype.filter` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.filter\n  filter: createMethod(2),\n  // `Array.prototype.some` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.some\n  some: createMethod(3),\n  // `Array.prototype.every` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.every\n  every: createMethod(4),\n  // `Array.prototype.find` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.find\n  find: createMethod(5),\n  // `Array.prototype.findIndex` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.findIndex\n  findIndex: createMethod(6)\n};\n","var aFunction = require('../internals/a-function');\nvar toObject = require('../internals/to-object');\nvar IndexedObject = require('../internals/indexed-object');\nvar toLength = require('../internals/to-length');\n\n// `Array.prototype.{ reduce, reduceRight }` methods implementation\nvar createMethod = function (IS_RIGHT) {\n  return function (that, callbackfn, argumentsLength, memo) {\n    aFunction(callbackfn);\n    var O = toObject(that);\n    var self = IndexedObject(O);\n    var length = toLength(O.length);\n    var index = IS_RIGHT ? length - 1 : 0;\n    var i = IS_RIGHT ? -1 : 1;\n    if (argumentsLength < 2) while (true) {\n      if (index in self) {\n        memo = self[index];\n        index += i;\n        break;\n      }\n      index += i;\n      if (IS_RIGHT ? index < 0 : length <= index) {\n        throw TypeError('Reduce of empty array with no initial value');\n      }\n    }\n    for (;IS_RIGHT ? index >= 0 : length > index; index += i) if (index in self) {\n      memo = callbackfn(memo, self[index], index, O);\n    }\n    return memo;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.reduce` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.reduce\n  left: createMethod(false),\n  // `Array.prototype.reduceRight` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.reduceright\n  right: createMethod(true)\n};\n","var classof = require('../internals/classof-raw');\n\n// `IsArray` abstract operation\n// https://tc39.github.io/ecma262/#sec-isarray\nmodule.exports = Array.isArray || function isArray(arg) {\n  return classof(arg) == 'Array';\n};\n"],"sourceRoot":""}